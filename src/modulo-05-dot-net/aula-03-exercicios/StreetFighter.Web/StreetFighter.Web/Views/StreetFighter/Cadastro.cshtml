@model StreetFighter.Web.Models.FichaTecnicaModel
@{
    ViewBag.Title = "Cadastro";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h3>Preencha os dados abaixo para cadastrar uma nova ficha técnica:</h3>

<h3>@ViewBag.Mensagem</h3>

@using (Html.BeginForm("SalvarCadastro", "StreetFighter", FormMethod.Post, new { @class = "form-horizontal" }))
{
    <div class="form-group">
        @Html.LabelFor(model => model.Nome, new { @class = "col-sm-4 control-label" })
        <div class="col-sm-8">
            @Html.TextBoxFor(model => model.Nome, new { @class = "form-control", @placeholder = "Digite o nome do personagem..." })
            @Html.ValidationMessageFor(model => model.Nome)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DataNascimento, new { @class = "col-sm-4 control-label" })
        <div class="col-sm-8">
            @Html.TextBoxFor(model => model.DataNascimento, new { @class = "form-control", @placeholder = "Digite a data de nascimento no formato dd/mm/aaaa..." })
            @Html.ValidationMessageFor(model => model.DataNascimento)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Altura, new { @class = "col-sm-4 control-label" })
        <div class="col-sm-8">
            @Html.TextBoxFor(model => model.Altura, new { @class = "form-control", @placeholder = "Digite a altura em centímetros..." })
            @Html.ValidationMessageFor(model => model.Altura)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Peso, new { @class = "col-sm-4 control-label" })
        <div class="col-sm-8">
            @Html.TextBoxFor(model => model.Peso, new { @class = "form-control", @placeholder = "Digite o peso em quilogramas..." })
            @Html.ValidationMessageFor(model => model.Peso)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Origem, new { @class = "col-sm-4 control-label" })
        <div class="col-sm-8">
            @Html.DropDownListFor(model => model.Origem, (IEnumerable<SelectListItem>)ViewBag.ListaDeOrigens, "Selecione...", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Origem)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.GolpesEspeciais, new { @class = "col-sm-4 control-label" })
        <div class="col-sm-8">
            @Html.TextBoxFor(model => model.GolpesEspeciais, new { @class = "form-control", @placeholder = "Digite os golpes especiais..." })
            @Html.ValidationMessageFor(model => model.GolpesEspeciais)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PersonagemOculto, new { @class = "col-sm-4 control-label" })
        <div class="col-sm-8">
            @Html.CheckBoxFor(model => model.PersonagemOculto)
            @Html.ValidationMessageFor(model => model.PersonagemOculto)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UrlDaImagem, new { @class = "col-sm-4 control-label" })
        <div class="col-sm-8">
            @Html.TextBoxFor(model => model.UrlDaImagem, new { @class = "form-control", @placeholder = "Digite a url da imagem..." })
            @Html.ValidationMessageFor(model => model.UrlDaImagem)
        </div>
    </div>

    <div class="form-group">
        <div class="col-sm-offset-2 col-sm-10">
            <button type="submit" class="btn btn-default pull-right">Salvar</button>
        </div>
    </div>
}

<script src="~/Scripts/jquery-1.9.1.js"></script>
<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>

<script type="text/javascript">
    $.validator.methods.number = function (value, element) {
        var regex = /^(\d*)(\,\d{1,2})?$/; //99999,99
        return this.optional(element) || regex.test(value);
    }

    $.validator.methods.date = function (value, element) {
        var date = new Date(value.replace(/(\d{2})[/](\d{2})[/](\d{4})/, "$2/$1/$3")); //31/12/2016
        return this.optional(element) || !/Invalid|NaN/.test(date.toString());
    }
</script>
